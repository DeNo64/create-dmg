name: Build Moonlight-Qt macOS

on: workflow_dispatch

jobs:
  build:
    runs-on: macos-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout desired Mac App
        uses: actions/checkout@v4
        with:
          repository: moonlight-stream/moonlight-qt
          ref: master
          submodules: recursive

      - name: Install Qt
        run: brew install qt #--debug

      - name: Install Xcode (if needed, use the CLI)
        # You might need to install Xcode using the CLI if not available
        # via brew, but consider using macOS runner image directly
        run: /usr/bin/xcodebuild -version 

      # - name: Build project
      #   run: |
      # -    qmake6 moonlight-qt.pro
      # -    make Release

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install create-dmg
        run: npm install --global create-dmg

      - name: Create DMG
        #env:
          #PATH: $PATH:/Library/Developer/CommandLineTools/usr/bin:/usr/local/bin:/opt/homebrew/bin
        run: |
          #echo "$PATH:/Library/Developer/CommandLineTools/usr/bin:/usr/local/bin:/opt/homebrew/bin" >> $GITHUB_PATH
          sed -i -e 's/x86_64 arm64/arm64/g' ./scripts/generate-dmg.sh
          # qmake moonlight-qt.pro
          # make release
          echo "SIGNING_IDENTITY = ''"  >> $GITHUB_ENV
          source ./scripts/generate-dmg.sh Release

      - name: Upload DMG (optional)
        uses: actions/upload-artifact@v4
        with:
          name: Moonlight-Qt-macOS-DMG
          path: build/installer-Release/Moonlight-6.1.0.dmg
